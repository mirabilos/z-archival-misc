<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta name="Microsoft Theme 2.00" content="blank 001">
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./Encryption_files/filelist.xml">
<title>Ewe Application Development</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Michael Brereton</o:Author>
  <o:LastAuthor>Michael Brereton</o:LastAuthor>
  <o:Revision>2</o:Revision>
  <o:TotalTime>97</o:TotalTime>
  <o:Created>2003-03-13T19:10:00Z</o:Created>
  <o:LastSaved>2003-03-19T10:47:00Z</o:LastSaved>
  <o:Pages>2</o:Pages>
  <o:Words>828</o:Words>
  <o:Characters>4722</o:Characters>
  <o:Lines>39</o:Lines>
  <o:Paragraphs>9</o:Paragraphs>
  <o:CharactersWithSpaces>5798</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:DrawingGridHorizontalSpacing>4.5 pt</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>12.25 pt</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:16792199 0 0 0 65791 0;}
@font-face
	{font-family:"Book Antiqua";
	panose-1:2 4 6 2 5 3 5 3 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-ansi-language:EN-US;}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:24.0pt;
	font-family:Arial;
	color:black;
	mso-font-kerning:16.0pt;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;}
h2
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:Arial;
	color:black;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;
	mso-bidi-font-style:italic;}
h3
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:14.0pt;
	font-family:Arial;
	color:black;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;}
h4
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:12.0pt;
	font-family:Arial;
	color:black;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;}
h5
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:5;
	font-size:10.0pt;
	font-family:Arial;
	color:black;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;
	mso-bidi-font-style:italic;}
h6
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:6;
	font-size:8.0pt;
	font-family:Arial;
	color:black;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{mso-style-update:auto;
	mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-ansi-language:EN-US;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{mso-style-update:auto;
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:24.0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-ansi-language:EN-US;}
a:link, span.MsoHyperlink
	{color:#999999;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:#990000;
	text-decoration:underline;
	text-underline:single;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	background:navy;
	font-size:12.0pt;
	font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-ansi-language:EN-US;}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:.7in .7in .7in .7in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
 /* List Definitions */
@list l0
	{mso-list-id:131604633;
	mso-list-type:hybrid;
	mso-list-template-ids:-1438744932 67698703 67698713 67698715 67698703 67698713 67698715 67698703 67698713 67698715;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white background="./Encryption_files/image001.gif" lang=EN-GB
link="#999999" vlink="#990000" style='tab-interval:.5in'>
<!--[if gte mso 9]><xml>
 <v:background id="_x0000_s1025" o:bwmode="white" o:targetscreensize="800,600">
  <v:fill src="./Encryption_files/image002.gif" o:title="blbkgnd" type="frame"/>
 </v:background></xml><![endif]-->

<div class=Section1>

<h1 align=center style='text-align:center'><a name="_Toc33663851"><span
style='mso-ansi-language:EN-GB'>Ewe Application Development</span></a><span
style='mso-ansi-language:EN-GB'><o:p></o:p></span></h1>

<p class=MsoNormal align=center style='text-align:center'><!--[if supportFields]><span
lang=EN-US><span style='mso-element:field-begin'></span></span><span
style='mso-ansi-language:EN-GB'><span style="mso-spacerun: yes"> </span>DATE \@
&quot;dd MMMM yyyy&quot; \* MERGEFORMAT </span><span lang=EN-US><span
style='mso-element:field-separator'></span></span><![endif]--><span
style='mso-ansi-language:EN-GB'>19 March 2003</span><!--[if supportFields]><span
lang=EN-US><span style='mso-element:field-end'></span></span><![endif]--><span
style='mso-ansi-language:EN-GB'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-ansi-language:EN-GB'>Michael L Brereton<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span lang=EN-US><a
href="http://www.ewesoft.com/">http://www.ewesoft.com/</a></span><span
style='mso-ansi-language:EN-GB'><o:p></o:p></span></p>

<p class=MsoToc1 style='tab-stops:right dotted 510.7pt'><!--[if supportFields]><b><span
lang=EN-US><span style='mso-element:field-begin'></span></span></b><b><span
style='mso-ansi-language:EN-GB'><span style="mso-spacerun: yes"> </span>TOC \h
\z \t &quot;Heading 2,1,Heading 3,2,Heading 4,3&quot; </span><span lang=EN-US><span
style='mso-element:field-separator'></span></span></b><![endif]--><span
class=MsoHyperlink><b><span lang=EN-US><a href="#_Toc35337302">Encryption and
Data Processing<span style='color:black;display:none;mso-hide:screen;
text-decoration:none;text-underline:none'><span style='mso-tab-count:1 dotted'>.. </span><span
style='mso-field-code:"PAGEREF _Toc35337302 \\h"'>1<span style='font-weight:
normal'><!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000D0000005F0054006F006300330035003300330037003300300032000000</w:data>
</xml><![endif]--></span></span></span></a></span></b></span><b><span
style='font-family:"Times New Roman";color:windowtext;mso-ansi-language:EN-GB'><o:p></o:p></span></b></p>

<p class=MsoToc3 style='tab-stops:right dotted 510.7pt'><span
class=MsoHyperlink><b><span lang=EN-US><a href="#_Toc35337303">The
ewe.io.DataProcessor Interface<span style='color:black;display:none;mso-hide:
screen;text-decoration:none;text-underline:none'><span style='mso-tab-count:
1 dotted'>. </span><span style='mso-field-code:"PAGEREF _Toc35337303 \\h"'>1<span
style='font-weight:normal'><!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000D0000005F0054006F006300330035003300330037003300300033000000</w:data>
</xml><![endif]--></span></span></span></a></span></b></span><b><span
style='font-family:"Times New Roman";color:windowtext;mso-ansi-language:EN-GB'><o:p></o:p></span></b></p>

<p class=MsoToc3 style='tab-stops:right dotted 510.7pt'><span
class=MsoHyperlink><b><span lang=EN-US><a href="#_Toc35337304">Encryption<span
style='color:black;display:none;mso-hide:screen;text-decoration:none;
text-underline:none'><span style='mso-tab-count:1 dotted'>.. </span><span
style='mso-field-code:"PAGEREF _Toc35337304 \\h"'>1<span style='font-weight:
normal'><!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000D0000005F0054006F006300330035003300330037003300300034000000</w:data>
</xml><![endif]--></span></span></span></a></span></b></span><b><span
style='font-family:"Times New Roman";color:windowtext;mso-ansi-language:EN-GB'><o:p></o:p></span></b></p>

<p class=MsoToc3 style='tab-stops:right dotted 510.7pt'><span
class=MsoHyperlink><b><span lang=EN-US><a href="#_Toc35337305">The
ewe.io.DataProcessorStream<span style='color:black;display:none;mso-hide:screen;
text-decoration:none;text-underline:none'><span style='mso-tab-count:1 dotted'>... </span><span
style='mso-field-code:"PAGEREF _Toc35337305 \\h"'>2<span style='font-weight:
normal'><!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000D0000005F0054006F006300330035003300330037003300300035000000</w:data>
</xml><![endif]--></span></span></span></a></span></b></span><b><span
style='font-family:"Times New Roman";color:windowtext;mso-ansi-language:EN-GB'><o:p></o:p></span></b></p>

<p class=MsoNormal><!--[if supportFields]><b><span lang=EN-US><span
style='mso-element:field-end'></span></span></b><![endif]--><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h2 style='background:#CCFFFF'><a name="_Toc518198786"></a><a
name="_Toc35337302"><span style='mso-bookmark:_Toc518198786'><span lang=EN-US>Encryption
and Data Processing</span></span></a></h2>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h4 style='background:#E6E6E6'><a name="_Toc518198787"></a><a
name="_Toc35337303"><span style='mso-bookmark:_Toc518198787'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='color:green'>The
ewe.io.DataProcessor Interface</span></b></span></a><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='color:green'><o:p></o:p></span></b></h4>

<p class=MsoNormal><span lang=EN-US>This provides an API for a general data
processing operation where an input sequence of bytes is transformed into a
processed output sequence of bytes. This output sequence may not necessarily be
of the same length as the input sequence. This interface can therefore be
applied to a variety of processes such as compression/decompression and
encryption/decryption. The interface members are listed below:</span><span
lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><b><span lang=EN-US>int
getBlockSize()</span></b><span lang=EN-US>  Some data processors require each
block to be processed to be multiples of a certain number of bytes (e.g. DES
encryption requires blocks which are multiples of 8-bytes). The method is used
to query the processor to find out what this value is. If the method returns a
value of 1 or less, then it can be assumed that there is no block size  i.e.
each block to be processed can be of arbitrary size.</span><span lang=EN-US
style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><b><span lang=EN-US
style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in'><b><span lang=EN-US>int
getMaxBlockSize()</span></b><span lang=EN-US>  Some data processor may have a maximum
input block size that they can handle at a time. If this method returns a value
of zero or less, then input blocks can be of arbitrary length.</span><span
lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><b><span lang=EN-US
style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></b></p>

<p class=MsoNormal style='margin-left:.5in'><b><span lang=EN-US>void
closeProcessing()</span></b><span lang=EN-US>  This destroys all resources
used by the DataProcessor. No other methods should be called after this method
is called.</span><span lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span lang=EN-US style='font-family:
"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><b><span lang=EN-US>ByteArray
processBlock(byte [] source, int offset, int length, boolean isLast, ByteArray
destination)</span></b><span lang=EN-US>  This sends a block of data to the
data processor and accepts processed output. Note that the number of bytes
which are output may not necessarily be the same amount as is input. The
processor may require more input to produce some output or it may produce
output which is larger than the input. Any processed data which is ready for
output is placed in the provided destination ByteArray and is returned. If no
destination ByteArray is provided, a new one will be created and returned. If
there is an error in the processing, this method will return null. </span><span
lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:.5in'><span lang=EN-US>The <b>isLast</b>
parameter is used to tell the processor that there will be no more input blocks
of data after this one. It <b>is</b> acceptable to send a block of data of zero
length with <b>isLast</b> being true. If this parameter is true the
DataProcessor should:</span><span lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list 1.0in'><![if !supportLists]><span lang=EN-US style='font-family:
"Book Antiqua"'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span lang=EN-US>Accept any input data provided with
the method call and then process and output <b>all</b> pending unprocessed
data.</span><span lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal style='margin-left:1.0in;text-indent:-.25in;mso-list:l0 level1 lfo2;
tab-stops:list 1.0in'><![if !supportLists]><span lang=EN-US style='font-family:
"Book Antiqua"'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><![endif]><span lang=EN-US>Reset itself to its initial state such
that the next call of processBlock() will be considered to be the beginning of
a fresh sequence of data.</span><span lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<h4 style='background:#E6E6E6'><a name="_Toc518198788"></a><a
name="_Toc35337304"><span style='mso-bookmark:_Toc518198788'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='color:green'>Encryption</span></b></span></a><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='color:green'><o:p></o:p></span></b></h4>

<p class=MsoNormal><span lang=EN-US>The <b>ewex.msencrypt</b> package contains
two objects: <b>Encryptor</b> and <b>Decryptor</b>. Both of these implement the
DataProcessor interface. Note that the Microsoft Crypto API is only implemented
on the desktop and on the WinCE 3.0 (PocketPC and HandHeld 2000) platforms. You
can select what type of crypto service provider you want, and what encryption
algorithm you want to use. However the easiest way to use them is to create
them using the default encryption provider type and algorithm. This defaults to
an RSA stream type encryption. This encryption always produces output which is
of the same size as the input. You can therefore create an Encryptor or
Decryptor using the simple constructor:</span><span lang=EN-US
style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><b><span lang=EN-US>Encryptor encrypt = new Encryptor(A
Password);</span></b><b><span lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></b></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The data output from the Encryptor can be
decrypted by a Decryptor object created with exactly the same password.</span><span
lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>If you are creating an application for
distribution using <b>ewex.msencrypt</b> you must include these classes in your
ewe file (they are not part of the standard VM) and you must distribute the <b>ewex_msencrypt.dll</b>
with your application. There is a different <b>dll</b> for each target
processor and OS.</span><span lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<h4 style='background:#E6E6E6'><a name="_Toc518198789"></a><a
name="_Toc35337305"><span style='mso-bookmark:_Toc518198789'><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='color:green'>The
ewe.io.DataProcessorStream</span></b></span></a><b style='mso-bidi-font-weight:
normal'><span lang=EN-US style='color:green'><o:p></o:p></span></b></h4>

<p class=MsoNormal><span lang=EN-US>This is a stream which you can use to
process another stream either on output or input. Say for example you want to
write text data into a file but you want it encrypted when it is stored. You
could do this with the following code.</span><span lang=EN-US style='font-family:
"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<pre style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>Encryptor ec = new Encryptor(password);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>if (!ec.isValid){</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>error(&quot;Could not create encryptor!&quot;);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>return;</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>}</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>FileOutputStream os = new FileOutputStream(new File(fileName));</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>if (!os.isOpen()){</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>error(&quot;Could not open output file!&quot;);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>return;</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>}</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>DataProcessorStream out = new DataProcessorStream(ec,os);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>PrintWriter pw = new PrintWriter(out);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>pw.println(&quot;This file will be encrypted!&quot;);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>pw.println(&quot;Try viewing it and you will see.&quot;);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>pw.close();</pre>

<p class=MsoNormal><span lang=EN-US style='font-family:"Courier New"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Writing data to the DataProcessorStream
first passes it through the DataProcessor object before passing it to the
destination stream.</span><span lang=EN-US style='font-family:"Book Antiqua";
mso-bidi-font-family:"Times New Roman"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>To decrypt the file we would do this:</span><span
lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<pre style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>Decryptor dc = new Decryptor(password);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>if (!dc.isValid){</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>error(&quot;Could not create decryptor!&quot;);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>return;</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>}</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>FileInputStream is = new FileInputStream(new File(fileName));</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>if (!is.isOpen()){</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>error(&quot;Could not open input file!&quot;);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>return;</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>}</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>DataProcessorStream in = new DataProcessorStream(dc,is);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>BufferedReader br = new BufferedReader(in);</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>while(true){</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>String line = br.readLine();</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>if (line == null) break;</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:3'>                       </span>ewe.sys.Vm.debug(line,0); //Print it out.</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>}</pre><pre
style='background:#F3F3F3'><span style='mso-tab-count:2'>               </span>br.close();</pre><pre
style='background:#F3F3F3'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></pre>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Reading data from the DataProcessorStream first
reads from the source stream and then passes it through the DataProcessor
object before being returned.</span><span lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>
