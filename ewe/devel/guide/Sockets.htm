<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:dt="uuid:C2F41010-65B3-11d1-A29F-00AA00C14882"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta name="Microsoft Theme 2.00" content="blank 001">
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 9">
<meta name=Originator content="Microsoft Word 9">
<link rel=File-List href="./Sockets_files/filelist.xml">
<title>Ewe Application Development</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Michael Brereton</o:Author>
  <o:LastAuthor>Michael Brereton</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>7</o:TotalTime>
  <o:Created>2003-03-13T18:52:00Z</o:Created>
  <o:LastSaved>2003-03-13T18:59:00Z</o:LastSaved>
  <o:Pages>1</o:Pages>
  <o:Words>811</o:Words>
  <o:Characters>4624</o:Characters>
  <o:Lines>38</o:Lines>
  <o:Paragraphs>9</o:Paragraphs>
  <o:CharactersWithSpaces>5678</o:CharactersWithSpaces>
  <o:Version>9.2720</o:Version>
 </o:DocumentProperties>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>0</w:Zoom>
  <w:DrawingGridHorizontalSpacing>4.5 pt</w:DrawingGridHorizontalSpacing>
  <w:DrawingGridVerticalSpacing>12.25 pt</w:DrawingGridVerticalSpacing>
  <w:DisplayHorizontalDrawingGridEvery>0</w:DisplayHorizontalDrawingGridEvery>
  <w:Compatibility>
   <w:FootnoteLayoutLikeWW8/>
   <w:ShapeLayoutLikeWW8/>
   <w:AlignTablesRowByRow/>
   <w:ForgetLastTabAlignment/>
   <w:LayoutRawTableWidth/>
   <w:LayoutTableRowsApart/>
  </w:Compatibility>
 </w:WordDocument>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:16792199 0 0 0 65791 0;}
@font-face
	{font-family:"Book Antiqua";
	panose-1:2 4 6 2 5 3 5 3 3 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:647 0 0 0 159 0;}
 /* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-ansi-language:EN-US;}
h1
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:24.0pt;
	font-family:Arial;
	color:black;
	mso-font-kerning:16.0pt;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;}
h2
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:18.0pt;
	font-family:Arial;
	color:black;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;
	mso-bidi-font-style:italic;}
h3
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:14.0pt;
	font-family:Arial;
	color:black;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;}
h4
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:12.0pt;
	font-family:Arial;
	color:black;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;}
h5
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:5;
	font-size:10.0pt;
	font-family:Arial;
	color:black;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;
	mso-bidi-font-style:italic;}
h6
	{mso-style-next:Normal;
	margin-top:12.0pt;
	margin-right:0in;
	margin-bottom:3.0pt;
	margin-left:0in;
	mso-pagination:widow-orphan;
	mso-outline-level:6;
	font-size:8.0pt;
	font-family:Arial;
	color:black;
	mso-ansi-language:EN-US;
	font-weight:normal;
	mso-bidi-font-weight:bold;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{mso-style-update:auto;
	mso-style-next:Normal;
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-ansi-language:EN-US;}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{mso-style-update:auto;
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:24.0pt;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:Arial;
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-ansi-language:EN-US;}
a:link, span.MsoHyperlink
	{color:#999999;
	text-decoration:underline;
	text-underline:single;}
a:visited, span.MsoHyperlinkFollowed
	{color:#990000;
	text-decoration:underline;
	text-underline:single;}
p.MsoDocumentMap, li.MsoDocumentMap, div.MsoDocumentMap
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	background:navy;
	font-size:12.0pt;
	font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	color:black;
	mso-ansi-language:EN-US;}
pre
	{margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Courier New";}
@page Section1
	{size:8.5in 11.0in;
	margin:.7in .7in .7in .7in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.Section1
	{page:Section1;}
-->
</style>
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1027"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white background="./Sockets_files/image001.gif" lang=EN-GB
link="#999999" vlink="#990000" style='tab-interval:.5in'>
<!--[if gte mso 9]><xml>
 <v:background id="_x0000_s1025" o:bwmode="white" o:targetscreensize="800,600">
  <v:fill src="./Sockets_files/image002.gif" o:title="blbkgnd" type="frame"/>
 </v:background></xml><![endif]-->

<div class=Section1>

<h1 align=center style='text-align:center'><a name="_Toc33663851"><span
style='mso-ansi-language:EN-GB'>Ewe Application Development</span></a><span
style='mso-ansi-language:EN-GB'><o:p></o:p></span></h1>

<p class=MsoNormal align=center style='text-align:center'><!--[if supportFields]><span
lang=EN-US><span style='mso-element:field-begin'></span></span><span
style='mso-ansi-language:EN-GB'><span style="mso-spacerun: yes"> </span>DATE \@
&quot;dd MMMM yyyy&quot; \* MERGEFORMAT </span><span lang=EN-US><span
style='mso-element:field-separator'></span></span><![endif]--><span
style='mso-ansi-language:EN-GB'>17 March 2003</span><!--[if supportFields]><span
lang=EN-US><span style='mso-element:field-end'></span></span><![endif]--><span
style='mso-ansi-language:EN-GB'><o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span
style='mso-ansi-language:EN-GB'>Michael L Brereton<o:p></o:p></span></p>

<p class=MsoNormal align=center style='text-align:center'><span lang=EN-US><a
href="http://www.ewesoft.com/">http://www.ewesoft.com/</a></span><span
style='mso-ansi-language:EN-GB'><o:p></o:p></span></p>

<p class=MsoToc1 style='tab-stops:right dotted 510.7pt'><!--[if supportFields]><b><span
lang=EN-US><span style='mso-element:field-begin'></span></span></b><b><span
style='mso-ansi-language:EN-GB'><span style="mso-spacerun: yes"> </span>TOC \h
\z \t &quot;Heading 2,1,Heading 3,2,Heading 4,3&quot; </span><span lang=EN-US><span
style='mso-element:field-separator'></span></span></b><![endif]--><span
class=MsoHyperlink><b><span lang=EN-US><a href="#_Toc35330932">Sockets and
Infra-Red Communication<span style='color:black;display:none;mso-hide:screen;
text-decoration:none;text-underline:none'><span style='mso-tab-count:1 dotted'>.. </span><span
style='mso-field-code:"PAGEREF _Toc35330932 \\h"'>1<span style='font-weight:
normal'><!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000D0000005F0054006F006300330035003300330030003900330032000000</w:data>
</xml><![endif]--></span></span></span></a></span></b></span><b><span
style='font-family:"Times New Roman";color:windowtext;mso-ansi-language:EN-GB'><o:p></o:p></span></b></p>

<p class=MsoToc3 style='tab-stops:right dotted 510.7pt'><span
class=MsoHyperlink><b><span lang=EN-US><a href="#_Toc35330933">ewe.net.Socket<span
style='color:black;display:none;mso-hide:screen;text-decoration:none;
text-underline:none'><span style='mso-tab-count:1 dotted'> </span><span
style='mso-field-code:"PAGEREF _Toc35330933 \\h"'>1<span style='font-weight:
normal'><!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000D0000005F0054006F006300330035003300330030003900330033000000</w:data>
</xml><![endif]--></span></span></span></a></span></b></span><b><span
style='font-family:"Times New Roman";color:windowtext;mso-ansi-language:EN-GB'><o:p></o:p></span></b></p>

<p class=MsoToc3 style='tab-stops:right dotted 510.7pt'><span
class=MsoHyperlink><b><span lang=EN-US><a href="#_Toc35330934">ewe.net.ServerSocket<span
style='color:black;display:none;mso-hide:screen;text-decoration:none;
text-underline:none'><span style='mso-tab-count:1 dotted'> </span><span
style='mso-field-code:"PAGEREF _Toc35330934 \\h"'>1<span style='font-weight:
normal'><!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000D0000005F0054006F006300330035003300330030003900330034000000</w:data>
</xml><![endif]--></span></span></span></a></span></b></span><b><span
style='font-family:"Times New Roman";color:windowtext;mso-ansi-language:EN-GB'><o:p></o:p></span></b></p>

<p class=MsoToc3 style='tab-stops:right dotted 510.7pt'><span
class=MsoHyperlink><b><span lang=EN-US><a href="#_Toc35330935">Infra-Red
Communication<span style='color:black;display:none;mso-hide:screen;text-decoration:
none;text-underline:none'><span style='mso-tab-count:1 dotted'>.. </span><span
style='mso-field-code:"PAGEREF _Toc35330935 \\h"'>2<span style='font-weight:
normal'><!--[if gte mso 9]><xml>
 <w:data>08D0C9EA79F9BACE118C8200AA004BA90B02000000080000000D0000005F0054006F006300330035003300330030003900330035000000</w:data>
</xml><![endif]--></span></span></span></a></span></b></span><b><span
style='font-family:"Times New Roman";color:windowtext;mso-ansi-language:EN-GB'><o:p></o:p></span></b></p>

<p class=MsoNormal><!--[if supportFields]><b><span lang=EN-US><span
style='mso-element:field-end'></span></span></b><![endif]--><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h2 style='background:#CCFFFF'><a name="_Toc13887053"></a><a name="_Toc35330932"><span
style='mso-bookmark:_Toc13887053'><span lang=EN-US>Sockets and Infra-Red
Communication</span></span></a></h2>

<p class=MsoNormal><span lang=EN-US>The <b>ewe.net </b>package provides a
streaming TCP/IP API almost identical to the <b>java.net</b> package. The major
classes are <b>Socket, ServerSocket</b> and <b>InetAddress.</b></span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The major difference between the Ewe Socket
and the Java Socket is that a Ewe Socket <b>is</b> a <b>Stream</b> and data can
be written to and read from it directly. This is unlike the Java Socket, which
requires you to call getInputStream() and getOutputStream() to retrieve one-way
streams for communication on the Socket.</span><span lang=EN-US
style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<h4 style='background:#E6E6E6'><a name="_Toc13887054"></a><a name="_Toc35330933"><span
style='mso-bookmark:_Toc13887054'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='color:green'>ewe.net.Socket</span></b></span></a><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='color:green'><o:p></o:p></span></b></h4>

<p class=MsoNormal><span lang=EN-US>This is used to provide a streaming
connection to a destination host that is listening for connections on a
particular port number. Simply constructing the Socket will initiate the
connection process. There are two types of constructors for Socket  <b>blocking</b>
and <b>non-blocking</b>.</span><span lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The <b>blocking</b> constructors do not
return until either the connection is fully complete or it has failed. In the
case of failure an exception is thrown and no Socket object is created. If it
succeeds then the Socket created in the constructor is fully connected and
ready for communication. Blocking constructors will block the current thread
until complete, while allowing other threads to run.</span><span lang=EN-US
style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The <b>non-blocking </b>constructors (which
you generally would not use) return immediately and an <b>ewe.sys.Handle</b> is
used to monitor the state of the connection. If the connection succeeds then
the Handle will have its state flags set to <b>Handle.Succeeded</b> otherwise
it will have its state flags set to <b>Handle.Failed</b>. You should use the <b>waitOnFlags()</b>
method to check on the state of the connection before using the Socket for
communication. Here is an example of how to use this constructor:</span><span
lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<pre style='background:white'>Socket trySocket(String host,int port,int waitInSeconds)</pre><pre
style='background:white'>{</pre><pre style='background:white'><span
style='mso-tab-count:1'>        </span>ewe.io.IOHandle h = new ewe.io.IOHandle();</pre><pre
style='background:white'><span style='mso-tab-count:1'>        </span>Socket s = new Socket(host,port,h);</pre><pre
style='background:white'><span style='mso-tab-count:1'>        </span>if (!h.waitOnFlags(h.Succeeded,new ewe.sys.TimeOut(waitInSeconds*1000))){</pre><pre
style='background:white'><span style='mso-tab-count:1'>        </span><span
style='mso-tab-count:1'>        </span>h.stop();</pre><pre style='background:
white'><span style='mso-tab-count:1'>        </span><span style='mso-tab-count:
1'>        </span>ewe.sys.Vm.debug(Could not connect!);</pre><pre
style='background:white'><span style='mso-tab-count:1'>        </span><span
style='mso-tab-count:1'>        </span>return null;</pre><pre style='background:
white'><span style='mso-tab-count:1'>        </span>}</pre><pre
style='background:white'><span style='mso-tab-count:1'>        </span>return s;</pre><pre
style='background:white'>}</pre>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Once the Socket is connected, it can be
used as a standard <b>ewe.io.Stream</b> object. You can also call <b>getOutputStream()</b>
and <b>getInputStream()</b> as you would in the standard java.net.Socket.</span><span
lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<h4 style='background:#E6E6E6'><a name="_Toc13887055"></a><a name="_Toc35330934"><span
style='mso-bookmark:_Toc13887055'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='color:green'>ewe.net.ServerSocket</span></b></span></a><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='color:green'><o:p></o:p></span></b></h4>

<p class=MsoNormal><span lang=EN-US>This class is used to listen for incoming
TCP/IP connections on a host. After the ServerSocket is constructed, the <b>accept()</b>
method is used to wait for and accept incoming connections. Each new incoming
connection is returned as a fully connected Socket. </span><span lang=EN-US
style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Just like Socket, ServerSocket provides
both blocking and non-blocking constructors. These work in exactly the same way
 that is, the <b>blocking</b> constructors will wait until the ServerSocket
has been bound to a local port and is in listen mode. If there is a failure
(because the specified port may already be in use) then an exception occurs.
Otherwise the ServerSocket is returned and the accept() method can be called to
start receiving connections. The <b>non-blocking</b> constructor must be
provided with a new <b>IOHandle</b> and this should then be used to monitor the
state of the connection in the same way as in the example above.</span><span
lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>The <b>blocking</b> accept() method does
not return until an incoming connection has been established (in which case a
new Socket is returned) or an error has occurred (in which case an IOException
is thrown). The <b>non-blocking</b> version will return a new <b>IOHandle</b>
(do not provide it with your own IOHandle, it will always create and return a
new one) which should be used to monitor the connection in the same way as
described above. However, if the IOHandle reports success then the newly
connected Socket will be returned in the IOHandle as the <b>returnValue</b>
variable. </span><span lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<pre style='background:white'>Socket acceptSocket(ServerSocket ss,int waitInSeconds)</pre><pre
style='background:white'>{</pre><pre style='background:white'><span
style='mso-tab-count:1'>        </span>ewe.io.IOHandle h = ss.accept(null);</pre><pre
style='background:white'><span style='mso-tab-count:1'>        </span>if (!h.waitOnFlags(h.Succeeded,new ewe.sys.TimeOut(waitInSeconds*1000))){</pre><pre
style='background:white'><span style='mso-tab-count:1'>        </span><span
style='mso-tab-count:1'>        </span>ewe.sys.Vm.debug(Nobody connected!);</pre><pre
style='background:white'><span style='mso-tab-count:1'>        </span><span
style='mso-tab-count:1'>        </span>return null;</pre><pre style='background:
white'><span style='mso-tab-count:1'>        </span>}</pre><pre
style='background:white'><span style='mso-tab-count:1'>        </span>return (Socket)h.returnValue;</pre><pre
style='background:white'>}</pre>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<h4 style='background:#E6E6E6'><a name="_Toc13887056"></a><a name="_Toc35330935"><span
style='mso-bookmark:_Toc13887056'><b style='mso-bidi-font-weight:normal'><span
lang=EN-US style='color:green'>Infra-Red Communication</span></b></span></a><b
style='mso-bidi-font-weight:normal'><span lang=EN-US style='color:green'><o:p></o:p></span></b></h4>

<p class=MsoNormal><span lang=EN-US>Infra-Red communication in Ewe is
accomplished using the standard IRSockets API, present in both WinCE and Linux
operating systems. Ewe layers on top of this a simple system that allows port
numbers to be used for ServerSockets and Sockets when listening and connecting
to the Infra-Red port. To create a ServerSocket that listens on the Infra-Red
port at a particular port number, simply use <b>infra-red</b> (lower case
letters only) as the host name and provide a port number. Providing a port
number of <b>zero</b> will request a new port number to be assigned, just as it
would when creating a standard ServerSocket.</span><span lang=EN-US
style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>Similarly, when connecting to the Infra-Red
port of a remote device, create a Socket with a host name of <b>infra-red</b>
and provide the port number of the destination server Socket.</span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US>On some mobile devices (such as the <b>Sharp
Zaurus</b>) the Infra-Red port must be explicitly activated by the user in
order for communication to be possible. On the <b>Zaurus</b> the <b>Beam
Receive</b> program under the <b>Utilities</b> program tab must be run to start
Infra-Red communications. There is no need for this on WinCE devices.</span><span
lang=EN-US style='font-family:"Book Antiqua"'><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US style='font-family:"Book Antiqua"'><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

<p class=MsoNormal><span lang=EN-US><![if !supportEmptyParas]>&nbsp;<![endif]><o:p></o:p></span></p>

</div>

</body>

</html>
