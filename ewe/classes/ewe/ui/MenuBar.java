/*********************************************************************************
 *  Ewe Virtual Machine - Version 1.14, January 24, 2002                         *
 *  Copyright (C) 1999-2002 Michael L Brereton <michael_brereton@ewesoft.com>    *
 *  All Rights Reserved                                                          *
 *                                                                               *
 *  This library and virtual machine is free software; you can redistribute      *
 *  it and/or modify it under the terms of the Amended GNU Lesser General        *
 *  Public License distributed with this software.                               *
 *                                                                               *
 *  Under this license, linking this library or part thereof with other files to *
 *  produce an executable does not in itself require the executable to be        *
 *  covered by the GNU Lesser General Public License.                            *
 *                                                                               *
 *  This library and virtual machine is distributed in the hope that it will     *
 *  be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                         *
 *                                                                               *
 *  You should have received a copy of the License along with this software;     *
 *  if not, please download it at: www.ewesoft.com/LGPL.txt                      *
 *                                                                               *
 *********************************************************************************/
package ewe.ui;
import ewe.fx.*;
/**
* A MenuBar holds a set of PullDownMenu buttons - each of which is associated with a
* Menu. You can listen to MenuEvents generated by the MenuBar to determine which item
* has been selected.
**/
//##################################################################
public class MenuBar extends Holder{
//##################################################################

{
	modify(NoFocus,0);
}
private CellPanel menus = new CellPanel();
public MenuBar()
{
	addLast(menus).setControl(VFILL|WEST);
}
public void addMenu(PullDownMenu m)
{
	menus.addNext(m).setControl(VFILL|WEST);
	//m.addListener(this);
}
public PullDownMenu addMenu(String name)
{
	return addMenu(new Menu(),name);
}
public PullDownMenu addMenu(Menu m,String name)
{
	PullDownMenu pdm = new PullDownMenu(name,m);
	addMenu(pdm);
	return pdm;
}

//-------------------------------------------------------------------
private boolean showMenuFor(Control n)
//-------------------------------------------------------------------
{
	return n instanceof ButtonControl ? ((ButtonControl)n).startDropMenu(null) : n.tryStartMenu(null);
}
//===================================================================
public boolean nextMenu(boolean isLeft)
//===================================================================
{
	Control prev = null;
	ewe.util.Iterator it = isLeft ? menus.getChildrenBackwards() : menus.getChildren();
	while (it.hasNext()){
		Control c = (Control)it.next();
		if (c.menuIsActive()){
			Control n = (Control)it.next();
			if (n == null) return false;
			ewe.sys.Vm.freezeSIP(this);
			c.menuState.closeMenu();
			showMenuFor(n);
		}
	}
	return false;
}

//===================================================================
public void onControlEvent(ControlEvent ev)
//===================================================================
{
	if (ev.type == ev.MENU_SHOWN){
		((Control)ev.target).getMenu().addListener(this);
	}else if (ev.type == MenuEvent.NEXT_MENU_LEFT || ev.type == MenuEvent.NEXT_MENU_RIGHT){
		nextMenu(ev.type == MenuEvent.NEXT_MENU_LEFT);
	}
	super.onControlEvent(ev);
}
//-------------------------------------------------------------------
protected boolean doHotKey(Control from,KeyEvent ev)
//-------------------------------------------------------------------
{
	Control first = null;
	if (ev.key == IKeys.MENU) {
		for (ewe.util.Iterator it = menus.getChildren(); it.hasNext();){
			Control c = (Control)it.next();
			if (first == null) first = c;
			if (c.menuIsActive()){
				c.menuState.closeMenu();
				return true;
			}
		}
		if (first != null) showMenuFor(first);
		return true;
	}
	return super.doHotKey(from,ev);
}
//##################################################################
}
//##################################################################

